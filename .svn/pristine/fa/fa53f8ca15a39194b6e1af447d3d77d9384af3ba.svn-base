package com.uxin.usedcar.test.libs;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.SocketException;
import java.util.Arrays;

import org.apache.commons.net.ftp.FTPClient;
import org.apache.commons.net.ftp.FTPFile;
import org.apache.commons.net.ftp.FTPReply;

public class ftpUtil {
	/**
	 * android上传预期埋点使用
	 * @param caseName
	 * @return boolean
	 */
	public static boolean ftpUploadForAndroid(String caseName){
		boolean code = ftpUpload("/event_android/", caseName+".txt", "/expected/"+caseName+".txt");
		return code;
	}
	/**
	 * android上传实际埋点使用
	 * @param caseName
	 * @return boolean
	 */
	public static boolean ftpUploadForAndroidActual(String caseName){
		boolean code = ftpUpload("/android_actual/", caseName+".txt", "/actual/statistic.json");
		return code;
	}
	/**
	 * iOS上传预期埋点使用
	 * @param caseName 
	 * @return boolean
	 */
	public static boolean ftpUploadForIOS(String caseName){
		boolean code = ftpUpload("/event_ios/", caseName+".txt", "/expected_ios/"+caseName+".txt");
		return code;
	}
	/**
	 * iOS上传实际埋点使用
	 * @param caseName 
	 * @return boolean
	 */
	public static boolean ftpUploadForIosActual(String caseName){
		boolean code = ftpUpload("/iOS_actual/", caseName+".txt", "/actual/statistic.json");
		return code;
	}
	/**
     * 上传文件
     * @param remotePath ftp服务保存地址
     * @param fileName 上传到ftp的文件名
     *  @param localPath 待上传文件的名称（绝对地址） * 
     * @return boolean
     */
	public static boolean ftpUpload(String remotePath,String fileName,String localPath){
		boolean success = false;
		FTPClient ftp = new FTPClient();
		
		try {
			InputStream input = new FileInputStream(new File(System.getProperty("user.dir")+localPath));
			ftp.connect("10.70.32.54", 2121);
			ftp.login("maidian_test", "maidian_test");
			 int reply = ftp.getReplyCode(); 
			if (!FTPReply.isPositiveCompletion(reply)) { 
			ftp.disconnect();
			System.err.println("连接失败");
			return success;
			} 
			ftp.changeWorkingDirectory(remotePath); 
			ftp.storeFile(fileName, input); 
			input.close(); 
			ftp.logout();
			success = true;
		} catch (SocketException e) {
			// TODO Auto-generated catch block
			System.out.println("SocketException");
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			System.out.println("IOException");
			e.printStackTrace();
		}finally { 
	        if (ftp.isConnected()) {
	            try {  
	                ftp.disconnect();  
	            } catch (IOException ioe) {  
	            }  
	        }  
	    } 
		System.out.println("上传成功");
		return success;
	}
	/** 
	 * Description: 从FTP服务器下载文件 
	 * @param remotePath FTP服务器上的相对路径 
	 * @param fileName 要下载的文件名 
	 * @param localPath 下载后保存到本地的路径 
	 * @return 
	 */  
	public static boolean downFile(String remotePath,String fileName,String localPath) {  
	    boolean success = false;  
	    FTPClient ftp = new FTPClient();  
	    try {  
	        int reply;  
	        ftp.connect("10.70.32.54", 2121);
			ftp.login("maidian_test", "maidian_test");
	        reply = ftp.getReplyCode();  
	        if (!FTPReply.isPositiveCompletion(reply)) {  
	            ftp.disconnect();
	            System.err.println("连接失败");
	            return success;  
	        }  
	        ftp.changeWorkingDirectory(remotePath);//转移到FTP服务器目录  
	        FTPFile[] fs = ftp.listFiles();
	        System.out.println("files:"+Arrays.toString(fs));
	        for(FTPFile ff:fs){
	        	System.out.println(ff.getName());
	            if(ff.getName().equals(fileName)){
	                File localFile = new File(localPath+"/"+ff.getName());  
	                OutputStream is = new FileOutputStream(localFile);   
	                ftp.retrieveFile(ff.getName(), is);  
	                is.close();  
	            }else {
					System.err.println("没有你要的文件，请检查拼写");
				}
	        }  
	          
	        ftp.logout();  
	        success = true;  
	    } catch (IOException e) {  
	        e.printStackTrace();  
	    } finally { 
	        if (ftp.isConnected()) {  
	            try {  
	                ftp.disconnect();  
	            } catch (IOException ioe) {  
	            }  
	        }  
	    } 
	    System.out.println("下载成功");
	    return success;  
	}
}
